.productForm {
  width: 100%;
  gap: var(--spacing-lg);

  & .formSection {
    flex: 1;
    background-color: var(--canvas-color);
    padding: 1.2rem var(--spacing-md) 2rem;
    border-radius: var(--radius-md);
    gap: var(--spacing-md);

    & > div {
      flex: 1;
      gap: var(--spacing-md);

      & > div {
        flex: 1 1 100%;
      }
    }

    & .sectionHeader p {
      color: var(--secondary-text);
    }

    & .sectionContent .formInputContainer {
      position: relative;

      & .inputHeader {
        width: max-content;

        & label > .requiredFieldIcon {
          color: var(--danger-color);
          font-size: 1rem;
        }
      }

      & .formInputWrapper {
        position: relative;
        flex: 1;

        & > div {
          flex: 1;
        }

        & .inputWrapper {
          flex: 1;
          position: relative;
          border: var(--border-base);
          border-radius: var(--radius-sm);
          transition: var(--transition-base);

          & input {
            border: none;
            flex: 1;
          }

          & .suffixDisplay {
            position: absolute;
            gap: var(--spacing-xs);
            right: var(--spacing-md);
            color: var(--secondary-text);
            font-size: var(--font-xs);
          }

          &:focus-within,
          &:hover {
            border-color: var(--accent-color);
            box-shadow: var(--shadow-xs)
              rgba(var(--accent-Rgb), var(--opacity-md));
          }
        }
      }

      & .reactQuillInput {
        flex: 1;
      }

      & .errorMsg {
        color: var(--danger-color);
      }

      &.invalidInput .formInputWrapper .inputWrapper {
        border-color: var(--danger-color);

        &:focus-within {
          box-shadow: var(--shadow-xs)
            rgba(var(--danger-Rgb), var(--opacity-lg));
        }
      }
    }

    & .showMoreBtn {
      transition: var(--transition-base);

      &.showMoreBtnActive {
        color: var(--accent-color);

        & svg {
          transform: rotate(180deg);
        }
      }
    }
  }

  & .mediaInputContainer {
    flex: 1;

    & .formInputWrapper {
      padding: var(--spacing-md);
      border-radius: var(--radius-sm);
      background-color: var(--wrapper-bg);
      justify-content: start;

      & .mediaPreviewWrapper {
        max-width: max-content;

        & .mediaPreviewItem {
          position: relative;
          width: 6rem;
          height: 6rem;
          border: var(--border-base-dashed);

          & img,
          video {
            width: 100%;
            height: 100%;
            object-fit: cover;
          }

          & .mediaPreviewActions {
            position: absolute;
            width: 100%;
            height: 100%;
            padding: 0 var(--spacing-xs);
            background-color: rgba(0, 0, 0, 0.7);
            opacity: 0;
            visibility: hidden;
            transition: var(--transition-base);

            & button svg {
              font-size: var(--font-lg);
              color: var(--white-color);
            }
          }

          &:hover .mediaPreviewActions {
            opacity: 1;
            visibility: visible;
          }
        }

        & .addMediaWrapper {
          width: 6rem;
          height: 6rem;
          border: var(--border-base-dashed);

          & .inputHeader {
            width: 100%;
            height: 100%;
            justify-content: center;

            & label {
              width: 100%;
              height: 100%;
              justify-content: center;
            }
          }

          & .formInputWrapper {
            position: absolute;
            top: 80%;
            opacity: 0;
            visibility: collapse;
            z-index: 10;
            transition: var(--transition-base) 100ms;
            padding: 0;

            & .inputWrapper {
              display: none;
            }

            & .addMediaActions {
              position: relative;
              gap: 0;
              padding: var(--spacing-xs) 0;
              border-radius: var(--radius-md);
              background-color: var(--block-bg);
              transition: var(--transition-base);

              & button {
                min-width: 100%;
                justify-content: start;
                padding: var(--spacing-sm) var(--spacing-md);

                &:hover {
                  background-color: var(--wrapper-bg);
                }
              }
            }
          }

          &:hover .formInputWrapper {
            opacity: 1;
            visibility: visible;
            top: 100%;
          }
        }
      }
    }

    & .uploadVideoOptions {
      /* padding: 2rem; */

      & .formInputWrapper {
        padding: 0;
        background-color: transparent;
      }
    }
  }

  & .dropdownWrapper {
    flex: 1;

    & .dropdownList {
      width: 100%;
      max-height: 25rem;
      overflow-y: auto;
      position: absolute;
      border: var(--border-base);
      border-radius: var(--radius-sm);
      padding: var(--spacing-sm) 0;
      background-color: var(--canvas-color);
      top: 4.2rem;
      left: 0;
      z-index: 10;

      & .dropdownOption {
        padding: var(--spacing-sm) var(--spacing-md);

        &:hover {
          background-color: var(--wrapper-bg);
        }
      }
    }
  }

  & .multiInputGroup {
    flex: 1;
    gap: var(--spacing-md);

    & > div {
      gap: var(--spacing-md);

      & .radioItem {
        width: max-content;
        cursor: pointer;

        & .inputWrapper {
          display: none;
        }

        & .customRadio {
          position: relative;
          width: 1.6rem;
          height: 1.6rem;
          border-radius: 50%;
          border: var(--border-base);

          &::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background-color: white;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: opacity 0.3s ease;
          }

          &.radioItemChecked {
            background-color: var(--accent-color);
            border-color: var(--accent-color);

            &::before {
              opacity: 1;
            }
          }
        }
      }
    }
  }

  & .productVariationsWrapper {
    width: 100%;

    & .variationItem {
      flex: 1;
      gap: var(--spacing-md);
      background-color: var(--wrapper-bg);
      padding: 2rem;
      border-radius: var(--radius-sm);

      & > div {
        flex-direction: column;
      }

      & .variationHeader {
        width: 100%;
        gap: var(--spacing-md);

        & .variationTitle {
          font-weight: var(--weight-semibold);
        }

        & .variationInfo span:last-child {
          color: var(--secondary-text);
        }

        & .variationDetails .showImageCheckbox {
          flex-direction: row-reverse;
          justify-content: start;
          row-gap: var(--spacing-md);

          & label {
            font-weight: var(--weight-base);
            cursor: pointer;

            & span:last-child {
              color: var(--secondary-text);
            }
          }

          & > div {
            border: none;
            max-width: max-content;

            & > div {
              border: none !important;

              &:focus-within,
              &:hover {
                border: none !important;
                box-shadow: none !important;
              }
            }
          }
        }
      }

      & .variationBody {
        width: 100%;

        & .variantWrapper {
          width: 100%;
        }

        & .variantItem {
          width: 100%;
          gap: var(--spacing-md);
          background-color: var(--block-bg);
          padding: var(--spacing-sm) var(--spacing-md);
          border-radius: var(--radius-md);

          & .formInputContainer {
            width: 30%;
          }

          & .mediaInputContainer {
            padding: 0;
            background-color: transparent;
            max-width: max-content;

            & > div:first-child {
              padding: 0;
              border-radius: none;
              background-color: transparent;
            }

            & > div > div > div {
              width: 4rem;
              height: 4rem;
            }
          }

          & .variantActions {
            margin-left: auto;
          }
        }
      }
    }

    & .invalidInput.variationItem {
      border: var(--border-err-dashed);
    }
  }

  & .productPSWrapper .variantTableWrapper {
    max-width: 100%;
    overflow-x: auto;
    overflow-y: hidden;

    & table {
      width: max-content;
      border-collapse: collapse;

      & th,
      td {
        padding: 10px;
        border: var(--border-base);
        text-align: center;
      }

      & th label > svg {
        color: var(--danger-color);
        font-size: 1rem;
      }

      & td:last-child > div > div > div {
        justify-content: center;
        border: none !important;

        &:focus-within,
        &:hover {
          border: none !important;
          box-shadow: none !important;
        }
      }
    }
  }

  & .productSpec > div {
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--spacing-md);

    & > div {
      flex: 0 0 48%;
    }
  }

  & .productSW > div {
    & .additionalJsx {
      margin-top: var(--spacing-sm);
    }

    & > div:first-child {
      flex: 0 0 30%;
      width: 30%;
    }

    & .inputGroup input:focus {
      border-color: var(--accent-color);
    }

    & .radioGroup {
      width: 100% !important;
      margin-top: var(--spacing-sm);

      & > div {
        justify-content: start;
      }
    }

    & > div:nth-child(3) > div {
      gap: var(--spacing-md);

      & > label {
        cursor: pointer;

        & > div > div > div {
          border: none !important;

          &:focus-within,
          &:hover {
            border: none !important;
            box-shadow: none !important;
          }
        }
      }
    }
  }

  & .formActions {
    padding: var(--spacing-md) 2rem;
    border-radius: var(--radius-md);
    background-color: var(--canvas-color);

    & > button {
      color: var(--white-color);
    }
  }
}
